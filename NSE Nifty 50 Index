{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6944507,"sourceType":"datasetVersion","datasetId":5914},{"sourceId":8401802,"sourceType":"datasetVersion","datasetId":4999143}],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport datetime\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-21T03:58:41.365279Z","iopub.execute_input":"2024-05-21T03:58:41.365720Z","iopub.status.idle":"2024-05-21T03:58:42.622026Z","shell.execute_reply.started":"2024-05-21T03:58:41.365685Z","shell.execute_reply":"2024-05-21T03:58:42.620891Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/india-headlines-news-dataset/india-news-headlines.csv\n/kaggle/input/0p00005vd6-bo/0P00005VD6.BO.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"# read the headline news csv\n# Time Range : Start Date: 2001-01-01 ; End Date: 2023-06-30 with CSV Rows: 3,876,557\nnews_df = pd.read_csv('/kaggle/input/india-headlines-news-dataset/india-news-headlines.csv')\nprint(news_df.info())\nprint('====='*8)\n\n# read the stock market csv\n# Time range : Start Date: 2018-01-02 ; End Date: 2024-05-10\nstock_df = pd.read_csv('/kaggle/input/0p00005vd6-bo/0P00005VD6.BO.csv')\nprint(stock_df.info())","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:01:45.629066Z","iopub.execute_input":"2024-05-21T04:01:45.629638Z","iopub.status.idle":"2024-05-21T04:01:55.969755Z","shell.execute_reply.started":"2024-05-21T04:01:45.629603Z","shell.execute_reply":"2024-05-21T04:01:55.968160Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3876557 entries, 0 to 3876556\nData columns (total 3 columns):\n #   Column             Dtype \n---  ------             ----- \n 0   publish_date       int64 \n 1   headline_category  object\n 2   headline_text      object\ndtypes: int64(1), object(2)\nmemory usage: 88.7+ MB\nNone\n========================================\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1567 entries, 0 to 1566\nData columns (total 7 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   Date       1567 non-null   object \n 1   Open       1561 non-null   float64\n 2   High       1561 non-null   float64\n 3   Low        1561 non-null   float64\n 4   Close      1561 non-null   float64\n 5   Adj Close  1561 non-null   float64\n 6   Volume     1561 non-null   float64\ndtypes: float64(6), object(1)\nmemory usage: 85.8+ KB\nNone\n","output_type":"stream"}]},{"cell_type":"code","source":"news_df.tail()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:02:48.082296Z","iopub.execute_input":"2024-05-21T04:02:48.082736Z","iopub.status.idle":"2024-05-21T04:02:48.102690Z","shell.execute_reply.started":"2024-05-21T04:02:48.082704Z","shell.execute_reply":"2024-05-21T04:02:48.101518Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"         publish_date headline_category  \\\n3876552      20230630          city.goa   \n3876553      20230630          city.goa   \n3876554      20230630          city.goa   \n3876555      20230630          city.goa   \n3876556      20230630          city.goa   \n\n                                             headline_text  \n3876552             10 PIs move HC over thwarted seniority  \n3876553  Govt notifies award in memory of Parrikar for ...  \n3876554  After youth's death; PWD installs crash barrie...  \n3876555      Authorities not acting against CRZ violations  \n3876556  Technicians to hold trial run of mini-EVs in P...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>publish_date</th>\n      <th>headline_category</th>\n      <th>headline_text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3876552</th>\n      <td>20230630</td>\n      <td>city.goa</td>\n      <td>10 PIs move HC over thwarted seniority</td>\n    </tr>\n    <tr>\n      <th>3876553</th>\n      <td>20230630</td>\n      <td>city.goa</td>\n      <td>Govt notifies award in memory of Parrikar for ...</td>\n    </tr>\n    <tr>\n      <th>3876554</th>\n      <td>20230630</td>\n      <td>city.goa</td>\n      <td>After youth's death; PWD installs crash barrie...</td>\n    </tr>\n    <tr>\n      <th>3876555</th>\n      <td>20230630</td>\n      <td>city.goa</td>\n      <td>Authorities not acting against CRZ violations</td>\n    </tr>\n    <tr>\n      <th>3876556</th>\n      <td>20230630</td>\n      <td>city.goa</td>\n      <td>Technicians to hold trial run of mini-EVs in P...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"stock_df.tail()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:02:50.763393Z","iopub.execute_input":"2024-05-21T04:02:50.763836Z","iopub.status.idle":"2024-05-21T04:02:50.783224Z","shell.execute_reply.started":"2024-05-21T04:02:50.763803Z","shell.execute_reply":"2024-05-21T04:02:50.781905Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"            Date        Open        High         Low       Close   Adj Close  \\\n1562  2024-05-06  178.828094  178.828094  178.828094  178.828094  178.828094   \n1563  2024-05-07  177.747406  177.747406  177.747406  177.747406  177.747406   \n1564  2024-05-08  177.744598  177.744598  177.744598  177.744598  177.744598   \n1565  2024-05-09  175.009399  175.009399  175.009399  175.009399  175.009399   \n1566  2024-05-10  176.041595  176.041595  176.041595  176.041595  176.041595   \n\n      Volume  \n1562     0.0  \n1563     0.0  \n1564     0.0  \n1565     0.0  \n1566     0.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Adj Close</th>\n      <th>Volume</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1562</th>\n      <td>2024-05-06</td>\n      <td>178.828094</td>\n      <td>178.828094</td>\n      <td>178.828094</td>\n      <td>178.828094</td>\n      <td>178.828094</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1563</th>\n      <td>2024-05-07</td>\n      <td>177.747406</td>\n      <td>177.747406</td>\n      <td>177.747406</td>\n      <td>177.747406</td>\n      <td>177.747406</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1564</th>\n      <td>2024-05-08</td>\n      <td>177.744598</td>\n      <td>177.744598</td>\n      <td>177.744598</td>\n      <td>177.744598</td>\n      <td>177.744598</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1565</th>\n      <td>2024-05-09</td>\n      <td>175.009399</td>\n      <td>175.009399</td>\n      <td>175.009399</td>\n      <td>175.009399</td>\n      <td>175.009399</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1566</th>\n      <td>2024-05-10</td>\n      <td>176.041595</td>\n      <td>176.041595</td>\n      <td>176.041595</td>\n      <td>176.041595</td>\n      <td>176.041595</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# convert object to date in publish_date and Date\nnews_df['publish_date'] = pd.to_datetime(news_df['publish_date'], format='%Y%m%d')\nstock_df['Date'] = pd.to_datetime(stock_df['Date'])\n\n# check\nprint(news_df['publish_date'].dtype)\nprint(stock_df['Date'].dtype)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:03:52.203240Z","iopub.execute_input":"2024-05-21T04:03:52.203758Z","iopub.status.idle":"2024-05-21T04:03:52.346210Z","shell.execute_reply.started":"2024-05-21T04:03:52.203719Z","shell.execute_reply":"2024-05-21T04:03:52.344560Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"datetime64[ns]\ndatetime64[ns]\n","output_type":"stream"}]},{"cell_type":"code","source":"# let me check once again the dataset time range\nprint(f\"the oldest date in news_df is {news_df['publish_date'].min}\")\nprint(f\"the latest date in news_df is {news_df['publish_date'].max}\")\nprint('====='*18)\nprint(f\"the oldest date in stock_df is {stock_df['Date'].min}\")\nprint(f\"the latest date in stock_df is {stock_df['Date'].max}\")","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:03:54.755485Z","iopub.execute_input":"2024-05-21T04:03:54.755883Z","iopub.status.idle":"2024-05-21T04:03:54.771954Z","shell.execute_reply.started":"2024-05-21T04:03:54.755851Z","shell.execute_reply":"2024-05-21T04:03:54.769960Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"the oldest date in news_df is <bound method Series.min of 0         2001-01-02\n1         2001-01-02\n2         2001-01-02\n3         2001-01-02\n4         2001-01-02\n             ...    \n3876552   2023-06-30\n3876553   2023-06-30\n3876554   2023-06-30\n3876555   2023-06-30\n3876556   2023-06-30\nName: publish_date, Length: 3876557, dtype: datetime64[ns]>\nthe latest date in news_df is <bound method Series.max of 0         2001-01-02\n1         2001-01-02\n2         2001-01-02\n3         2001-01-02\n4         2001-01-02\n             ...    \n3876552   2023-06-30\n3876553   2023-06-30\n3876554   2023-06-30\n3876555   2023-06-30\n3876556   2023-06-30\nName: publish_date, Length: 3876557, dtype: datetime64[ns]>\n==========================================================================================\nthe oldest date in stock_df is <bound method Series.min of 0      2018-01-02\n1      2018-01-03\n2      2018-01-04\n3      2018-01-05\n4      2018-01-08\n          ...    \n1562   2024-05-06\n1563   2024-05-07\n1564   2024-05-08\n1565   2024-05-09\n1566   2024-05-10\nName: Date, Length: 1567, dtype: datetime64[ns]>\nthe latest date in stock_df is <bound method Series.max of 0      2018-01-02\n1      2018-01-03\n2      2018-01-04\n3      2018-01-05\n4      2018-01-08\n          ...    \n1562   2024-05-06\n1563   2024-05-07\n1564   2024-05-08\n1565   2024-05-09\n1566   2024-05-10\nName: Date, Length: 1567, dtype: datetime64[ns]>\n","output_type":"stream"}]},{"cell_type":"code","source":"# make the two csv in the same time frame 2018-01-02 until 2023-06-30\nnews_df_filter = news_df.loc[(news_df['publish_date'] >= '2018-01-02') & (news_df['publish_date'] <= '2023-06-30')]\nstock_df_filter = stock_df.loc[(stock_df['Date'] >= '2018-01-02') & (stock_df['Date'] <= '2023-06-30')]\n\n# print df info\nprint(news_df_filter.info())\nprint('====='*8)\nprint(stock_df_filter.info())","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:03:57.796793Z","iopub.execute_input":"2024-05-21T04:03:57.797479Z","iopub.status.idle":"2024-05-21T04:03:58.158162Z","shell.execute_reply.started":"2024-05-21T04:03:57.797421Z","shell.execute_reply":"2024-05-21T04:03:58.156691Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 1071079 entries, 2805478 to 3876556\nData columns (total 3 columns):\n #   Column             Non-Null Count    Dtype         \n---  ------             --------------    -----         \n 0   publish_date       1071079 non-null  datetime64[ns]\n 1   headline_category  1071079 non-null  object        \n 2   headline_text      1071079 non-null  object        \ndtypes: datetime64[ns](1), object(2)\nmemory usage: 32.7+ MB\nNone\n========================================\n<class 'pandas.core.frame.DataFrame'>\nIndex: 1357 entries, 0 to 1356\nData columns (total 7 columns):\n #   Column     Non-Null Count  Dtype         \n---  ------     --------------  -----         \n 0   Date       1357 non-null   datetime64[ns]\n 1   Open       1352 non-null   float64       \n 2   High       1352 non-null   float64       \n 3   Low        1352 non-null   float64       \n 4   Close      1352 non-null   float64       \n 5   Adj Close  1352 non-null   float64       \n 6   Volume     1352 non-null   float64       \ndtypes: datetime64[ns](1), float64(6)\nmemory usage: 84.8 KB\nNone\n","output_type":"stream"}]},{"cell_type":"code","source":"# only take 1 headline for each date\nnews_df_filter = news_df_filter.groupby(['publish_date']).first().reset_index()\nlen(news_df_filter)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:04:09.197907Z","iopub.execute_input":"2024-05-21T04:04:09.198310Z","iopub.status.idle":"2024-05-21T04:04:09.644014Z","shell.execute_reply.started":"2024-05-21T04:04:09.198278Z","shell.execute_reply":"2024-05-21T04:04:09.642449Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"2003"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Stock df: Cleaning**","metadata":{}},{"cell_type":"code","source":"# check missing value\nstock_df_filter.isnull().sum()\n\ncolumn_missing = ['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']\n# replace missing value with interpolation technique\nfor col in column_missing:\n    stock_df_filter[col].interpolate(method='linear', inplace=True)\n    \n# last check\nprint(stock_df_filter.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:04:39.845820Z","iopub.execute_input":"2024-05-21T04:04:39.846271Z","iopub.status.idle":"2024-05-21T04:04:39.864432Z","shell.execute_reply.started":"2024-05-21T04:04:39.846240Z","shell.execute_reply":"2024-05-21T04:04:39.863138Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Date         0\nOpen         0\nHigh         0\nLow          0\nClose        0\nAdj Close    0\nVolume       0\ndtype: int64\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_33/978698964.py:7: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  stock_df_filter[col].interpolate(method='linear', inplace=True)\n/tmp/ipykernel_33/978698964.py:7: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  stock_df_filter[col].interpolate(method='linear', inplace=True)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Stock df: EDA**","metadata":{}},{"cell_type":"code","source":"stock_df_filter.describe()\n\n# don't use Volume because it filled with 0.0\n# notice that columns: Open, High, Low, Close are having the same value just like Adj Close for every row","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:04:55.053867Z","iopub.execute_input":"2024-05-21T04:04:55.054342Z","iopub.status.idle":"2024-05-21T04:04:55.094058Z","shell.execute_reply.started":"2024-05-21T04:04:55.054289Z","shell.execute_reply":"2024-05-21T04:04:55.092921Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"                                Date         Open         High          Low  \\\ncount                           1357  1357.000000  1357.000000  1357.000000   \nmean   2020-10-03 01:20:38.909359104   108.861688   108.861688   108.861688   \nmin              2018-01-02 00:00:00    60.894501    60.894501    60.894501   \n25%              2019-05-23 00:00:00    87.034302    87.034302    87.034302   \n50%              2020-10-06 00:00:00    96.219704    96.219704    96.219704   \n75%              2022-02-15 00:00:00   135.570099   135.570099   135.570099   \nmax              2023-06-30 00:00:00   152.932098   152.932098   152.932098   \nstd                              NaN    24.541209    24.541209    24.541209   \n\n             Close    Adj Close  Volume  \ncount  1357.000000  1357.000000  1357.0  \nmean    108.861688   108.861688     0.0  \nmin      60.894501    60.894501     0.0  \n25%      87.034302    87.034302     0.0  \n50%      96.219704    96.219704     0.0  \n75%     135.570099   135.570099     0.0  \nmax     152.932098   152.932098     0.0  \nstd      24.541209    24.541209     0.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Adj Close</th>\n      <th>Volume</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1357</td>\n      <td>1357.000000</td>\n      <td>1357.000000</td>\n      <td>1357.000000</td>\n      <td>1357.000000</td>\n      <td>1357.000000</td>\n      <td>1357.0</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2020-10-03 01:20:38.909359104</td>\n      <td>108.861688</td>\n      <td>108.861688</td>\n      <td>108.861688</td>\n      <td>108.861688</td>\n      <td>108.861688</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>2018-01-02 00:00:00</td>\n      <td>60.894501</td>\n      <td>60.894501</td>\n      <td>60.894501</td>\n      <td>60.894501</td>\n      <td>60.894501</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2019-05-23 00:00:00</td>\n      <td>87.034302</td>\n      <td>87.034302</td>\n      <td>87.034302</td>\n      <td>87.034302</td>\n      <td>87.034302</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2020-10-06 00:00:00</td>\n      <td>96.219704</td>\n      <td>96.219704</td>\n      <td>96.219704</td>\n      <td>96.219704</td>\n      <td>96.219704</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2022-02-15 00:00:00</td>\n      <td>135.570099</td>\n      <td>135.570099</td>\n      <td>135.570099</td>\n      <td>135.570099</td>\n      <td>135.570099</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2023-06-30 00:00:00</td>\n      <td>152.932098</td>\n      <td>152.932098</td>\n      <td>152.932098</td>\n      <td>152.932098</td>\n      <td>152.932098</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>NaN</td>\n      <td>24.541209</td>\n      <td>24.541209</td>\n      <td>24.541209</td>\n      <td>24.541209</td>\n      <td>24.541209</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# histplot with new features\n# Select numerical columns\nnumerical_cols = stock_df_filter.select_dtypes(include=['float64', 'int64', 'int32'])\n\n# Determine number of rows and columns for subplots\nnum_cols = numerical_cols.shape[1]\nnum_rows = (num_cols - 1) // 2 + 1  # Round up\n\n# Create subplots\nfig, axes = plt.subplots(num_rows, 2, figsize=(20, num_rows * 5))\n\n# Flatten axes if necessary\naxes = axes.flatten()\n\n# Plot histograms\nfor i, col in enumerate(numerical_cols.columns):\n    sns.distplot(numerical_cols[col], ax=axes[i])\n    axes[i].set_title(col)\n\n# Remove empty subplots\nfor j in range(i+1, len(axes)):\n    fig.delaxes(axes[j])\n\n# Adjust layout\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:06:19.562124Z","iopub.execute_input":"2024-05-21T04:06:19.562566Z","iopub.status.idle":"2024-05-21T04:06:22.137520Z","shell.execute_reply.started":"2024-05-21T04:06:19.562533Z","shell.execute_reply":"2024-05-21T04:06:22.135977Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/3468805037.py:17: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(numerical_cols[col], ax=axes[i])\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/tmp/ipykernel_33/3468805037.py:17: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(numerical_cols[col], ax=axes[i])\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/tmp/ipykernel_33/3468805037.py:17: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(numerical_cols[col], ax=axes[i])\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/tmp/ipykernel_33/3468805037.py:17: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(numerical_cols[col], ax=axes[i])\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/tmp/ipykernel_33/3468805037.py:17: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(numerical_cols[col], ax=axes[i])\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/tmp/ipykernel_33/3468805037.py:17: UserWarning: \n\n`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n\nPlease adapt your code to use either `displot` (a figure-level function with\nsimilar flexibility) or `histplot` (an axes-level function for histograms).\n\nFor a guide to updating your code to use the new functions, please see\nhttps://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n\n  sns.distplot(numerical_cols[col], ax=axes[i])\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/distributions.py:2511: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning.\n  kdeplot(**{axis: a}, ax=ax, color=kde_color, **kde_kws)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x1500 with 6 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# plotting moving average\n\nclose = stock_df_filter['Adj Close']\n\nma = close.rolling(window = 50).mean()\nstd = close.rolling(window = 50).std()\n\nplt.figure(figsize=(10,6))\nstock_df_filter['Adj Close'].plot(color='g',label='Close')\nma.plot(color = 'r', label='Rolling Mean')\nstd.plot(label = 'Rolling Standard Deviation')\n\nplt.legend()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:12:33.273681Z","iopub.execute_input":"2024-05-21T04:12:33.274101Z","iopub.status.idle":"2024-05-21T04:12:33.713583Z","shell.execute_reply.started":"2024-05-21T04:12:33.274068Z","shell.execute_reply":"2024-05-21T04:12:33.712699Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7d51f6d67940>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# **Stock df: Auto ARIMA**","metadata":{}},{"cell_type":"code","source":"!pip install pmdarima -q","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:15:59.981186Z","iopub.execute_input":"2024-05-21T04:15:59.981636Z","iopub.status.idle":"2024-05-21T04:16:15.317859Z","shell.execute_reply.started":"2024-05-21T04:15:59.981581Z","shell.execute_reply":"2024-05-21T04:16:15.316082Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"import itertools\nfrom statsmodels.tsa.stattools import adfuller, acf, pacf\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom sklearn.metrics import mean_squared_error","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:22:08.633385Z","iopub.execute_input":"2024-05-21T04:22:08.633861Z","iopub.status.idle":"2024-05-21T04:22:08.640672Z","shell.execute_reply.started":"2024-05-21T04:22:08.633822Z","shell.execute_reply":"2024-05-21T04:22:08.639193Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"# split train and test set in stock_df_filter\nstock_train = close[:1254]\nstock_test = close[1254:]","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:31:59.867782Z","iopub.execute_input":"2024-05-21T04:31:59.868181Z","iopub.status.idle":"2024-05-21T04:31:59.877618Z","shell.execute_reply.started":"2024-05-21T04:31:59.868149Z","shell.execute_reply":"2024-05-21T04:31:59.876140Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"def test_stationarity(timeseries):\n    \n    # Determing rolling statistics\n    rolmean = timeseries.rolling(20).mean()\n    rolstd = timeseries.rolling(20).std()\n    \n    # Plot rolling statistics:\n    plt.figure(figsize = (10,8))\n    plt.plot(timeseries, color = 'y', label = 'original')\n    plt.plot(rolmean, color = 'r', label = 'rolling mean')\n    plt.plot(rolstd, color = 'b', label = 'rolling std')\n    plt.xlabel('Date')\n    plt.legend()\n    plt.title('Rolling Mean and Standard Deviation',  fontsize = 20)\n    plt.show(block = False)\n    \n    print('Results of dickey fuller test')\n    result = adfuller(timeseries, autolag = 'AIC')\n    labels = ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n    \n    for value,label in zip(result, labels):\n        print(label+' : '+str(value))\n        \n    if result[1] <= 0.05:\n        print(\"Strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data is stationary\")\n    else:\n        print(\"Weak evidence against null hypothesis, time series is non-stationary \")\n\ntest_stationarity(stock_train)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:32:02.511592Z","iopub.execute_input":"2024-05-21T04:32:02.512538Z","iopub.status.idle":"2024-05-21T04:32:03.011312Z","shell.execute_reply.started":"2024-05-21T04:32:02.512502Z","shell.execute_reply":"2024-05-21T04:32:03.009949Z"},"trusted":true},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x800 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"Results of dickey fuller test\nADF Test Statistic : -0.6000612086369791\np-value : 0.8709681956301089\n#Lags Used : 6\nNumber of Observations Used : 1247\nWeak evidence against null hypothesis, time series is non-stationary \n","output_type":"stream"}]},{"cell_type":"code","source":"stock_train_log = np.log(stock_train) \nstock_test_log = np.log(stock_test)\n\nmav = stock_train_log.rolling(24).mean() \nplt.figure(figsize = (10,6))\nplt.plot(stock_train_log) \nplt.plot(mav, color = 'red') ","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:32:07.344909Z","iopub.execute_input":"2024-05-21T04:32:07.345344Z","iopub.status.idle":"2024-05-21T04:32:07.650419Z","shell.execute_reply.started":"2024-05-21T04:32:07.345311Z","shell.execute_reply":"2024-05-21T04:32:07.649072Z"},"trusted":true},"execution_count":33,"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7d51d5874610>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"### **in log scale**","metadata":{}},{"cell_type":"code","source":"from pmdarima import auto_arima\n\n# log scale, make it stasioner\nmodel_aa = auto_arima(stock_train_log, trace = True, error_action = 'ignore', suppress_warnings = True)\nmodel_aa.fit(stock_train_log)\npredictions = model_aa.predict(n_periods = len(stock_test))\npredictions = pd.DataFrame(predictions, index = stock_test_log.index, columns=['Prediction'])","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:32:11.243974Z","iopub.execute_input":"2024-05-21T04:32:11.244386Z","iopub.status.idle":"2024-05-21T04:32:15.858449Z","shell.execute_reply.started":"2024-05-21T04:32:11.244353Z","shell.execute_reply":"2024-05-21T04:32:15.857245Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"Performing stepwise search to minimize aic\n ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=-7515.162, Time=1.34 sec\n ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=-7519.692, Time=0.20 sec\n ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=-7520.403, Time=0.26 sec\n ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=-7520.266, Time=0.46 sec\n ARIMA(0,1,0)(0,0,0)[0]             : AIC=-7520.154, Time=0.11 sec\n ARIMA(2,1,0)(0,0,0)[0] intercept   : AIC=-7519.150, Time=0.36 sec\n ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=-7518.749, Time=0.43 sec\n ARIMA(2,1,1)(0,0,0)[0] intercept   : AIC=-7518.045, Time=0.33 sec\n ARIMA(1,1,0)(0,0,0)[0]             : AIC=-7520.713, Time=0.26 sec\n ARIMA(2,1,0)(0,0,0)[0]             : AIC=-7519.547, Time=0.17 sec\n ARIMA(1,1,1)(0,0,0)[0]             : AIC=-7519.074, Time=0.08 sec\n ARIMA(0,1,1)(0,0,0)[0]             : AIC=-7520.577, Time=0.11 sec\n ARIMA(2,1,1)(0,0,0)[0]             : AIC=-7519.009, Time=0.26 sec\n\nBest model:  ARIMA(1,1,0)(0,0,0)[0]          \nTotal fit time: 4.383 seconds\n","output_type":"stream"}]},{"cell_type":"code","source":"# in log scale\nmse_maa = mean_squared_error(stock_test_log, predictions)\nrmse_maa = np.sqrt(mean_squared_error(stock_test_log, predictions))\n\nprint(f'MSE: {mse_maa}')\nprint(f'RMSE: {rmse_maa}')","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:32:23.175351Z","iopub.execute_input":"2024-05-21T04:32:23.175830Z","iopub.status.idle":"2024-05-21T04:32:23.186506Z","shell.execute_reply.started":"2024-05-21T04:32:23.175785Z","shell.execute_reply":"2024-05-21T04:32:23.185302Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"MSE: 0.001368552610377944\nRMSE: 0.03699395370027302\n","output_type":"stream"}]},{"cell_type":"code","source":"# in log scale\n\nplt.plot(stock_train_log, label='Train')\nplt.plot(stock_test_log, label='Test')\nplt.plot(predictions, label='Prediction in log')\nplt.title('SE Nifty 50 Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('Actual Stock Price') # something wrong, the predictions result is the same for all row","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:42:15.821733Z","iopub.execute_input":"2024-05-21T04:42:15.822194Z","iopub.status.idle":"2024-05-21T04:42:16.186840Z","shell.execute_reply.started":"2024-05-21T04:42:15.822159Z","shell.execute_reply":"2024-05-21T04:42:16.185504Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'Actual Stock Price')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"### **in real scale**","metadata":{}},{"cell_type":"code","source":"# real scale\nmodel_ab = auto_arima(stock_train, trace = True, error_action = 'ignore', suppress_warnings = True)\nmodel_ab.fit(stock_train)\npredictions_ = model_ab.predict(n_periods = len(stock_test))\npredictions_ = pd.DataFrame(predictions, index = stock_test.index, columns=['Prediction'])","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:39:41.021359Z","iopub.execute_input":"2024-05-21T04:39:41.023046Z","iopub.status.idle":"2024-05-21T04:39:43.477302Z","shell.execute_reply.started":"2024-05-21T04:39:41.022993Z","shell.execute_reply":"2024-05-21T04:39:43.476454Z"},"trusted":true},"execution_count":42,"outputs":[{"name":"stdout","text":"Performing stepwise search to minimize aic\n ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=3944.969, Time=1.85 sec\n ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=3937.006, Time=0.10 sec\n ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=3939.005, Time=0.10 sec\n ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=3939.005, Time=0.13 sec\n ARIMA(0,1,0)(0,0,0)[0]             : AIC=3936.951, Time=0.04 sec\n ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=3941.005, Time=0.16 sec\n\nBest model:  ARIMA(0,1,0)(0,0,0)[0]          \nTotal fit time: 2.395 seconds\n","output_type":"stream"}]},{"cell_type":"code","source":"# in real scale\nmse_mab = mean_squared_error(stock_test, predictions_)\nrmse_mab = np.sqrt(mean_squared_error(stock_test, predictions_))\n\nprint(f'MSE: {mse_mab}')\nprint(f'RMSE: {rmse_mab}')","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:44:20.555015Z","iopub.execute_input":"2024-05-21T04:44:20.556304Z","iopub.status.idle":"2024-05-21T04:44:20.567381Z","shell.execute_reply.started":"2024-05-21T04:44:20.556262Z","shell.execute_reply":"2024-05-21T04:44:20.565682Z"},"trusted":true},"execution_count":47,"outputs":[{"name":"stdout","text":"MSE: 19027.63409348023\nRMSE: 137.9406904922555\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.plot(stock_train, label='Train')\nplt.plot(stock_test, label='Test')\nplt.plot(predictions_, label='Prediction in real scale')\nplt.title('SE Nifty 50 Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('Actual Stock Price') # something wrong, the predictions result is the same for all row","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:44:59.721944Z","iopub.execute_input":"2024-05-21T04:44:59.722363Z","iopub.status.idle":"2024-05-21T04:45:00.099490Z","shell.execute_reply.started":"2024-05-21T04:44:59.722330Z","shell.execute_reply":"2024-05-21T04:45:00.098396Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'Actual Stock Price')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# **News df: Cleaning**","metadata":{}},{"cell_type":"code","source":"import re\nimport string\nimport emoji\nimport html\nimport nltk\nnltk.download('punkt')\nnltk.download('stopwords')\nnltk.download('vader_lexicon')\n#from spacy.lang.en.stop_words import STOP_WORDS\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\n#from nltk.stem import PorterStemmer\nfrom textblob import TextBlob","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:47:49.248783Z","iopub.execute_input":"2024-05-21T04:47:49.249214Z","iopub.status.idle":"2024-05-21T04:47:50.259898Z","shell.execute_reply.started":"2024-05-21T04:47:49.249183Z","shell.execute_reply":"2024-05-21T04:47:50.258093Z"},"trusted":true},"execution_count":51,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n[nltk_data] Downloading package vader_lexicon to\n[nltk_data]     /usr/share/nltk_data...\n[nltk_data]   Package vader_lexicon is already up-to-date!\n","output_type":"stream"}]},{"cell_type":"code","source":"# check the length of news_headline\nnews_df_filter['len_headline_text'] = news_df_filter['headline_text'].apply(len)\n\n# distribution of content length\nsns.kdeplot(data= news_df_filter, x='len_headline_text')","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:47:56.348459Z","iopub.execute_input":"2024-05-21T04:47:56.348938Z","iopub.status.idle":"2024-05-21T04:47:56.703416Z","shell.execute_reply.started":"2024-05-21T04:47:56.348903Z","shell.execute_reply":"2024-05-21T04:47:56.701862Z"},"trusted":true},"execution_count":52,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='len_headline_text', ylabel='Density'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}}]},{"cell_type":"code","source":"# word cloud of original news headline\n\nheadline_ori = ' '.join(news_df_filter['headline_text'].tolist())\nword_cloud_0 = WordCloud(max_words=100, random_state=100, background_color=\"white\").generate(headline_ori)\n\nplt.figure(figsize=(15, 10))\nplt.imshow(word_cloud_0, interpolation='bilinear')\nplt.title('WordCloud of Original News Headline', fontsize=20)\nplt.axis(\"off\")\n#plt.savefig('wordcloud_ori.png')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T05:39:10.892482Z","iopub.execute_input":"2024-05-20T05:39:10.892905Z","iopub.status.idle":"2024-05-20T05:39:11.916198Z","shell.execute_reply.started":"2024-05-20T05:39:10.892874Z","shell.execute_reply":"2024-05-20T05:39:11.915225Z"},"trusted":true},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# define function to remove special characters\ndef remove_special_characters(text):\n    \"\"\"\n        Remove special special characters, including symbols, emojis, and other graphic characters\n    \"\"\"\n    emoji_pattern = re.compile(\n        '['\n        u'\\U0001F600-\\U0001F64F'  # emoticons\n        u'\\U0001F300-\\U0001F5FF'  # symbols & pictographs\n        u'\\U0001F680-\\U0001F6FF'  # transport & map symbols\n        u'\\U0001F1E0-\\U0001F1FF'  # flags (iOS)\n        u'\\U00002702-\\U000027B0'  # Dingbats\n        u'\\U000024C2-\\U0001F251'\n        u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n        u\"\\U0001F700-\\U0001F77F\"  # alchemical symbols\n        u\"\\U0001F780-\\U0001F7FF\"  # Geometric Shapes Extended\n        u\"\\U0001F800-\\U0001F8FF\"  # Supplemental Arrows-C\n        u\"\\U0001F900-\\U0001F9FF\"  # Supplemental Symbols and Pictographs\n        u\"\\U0001FA00-\\U0001FA6F\"  # Chess Symbols\n        u\"\\U0001FA70-\\U0001FAFF\"  # Symbols and Pictographs Extended-A\n        ']+',\n        flags=re.UNICODE)\n    return emoji_pattern.sub(r'', text)\n\n# define function to clean the text\ndef clean_text(tweet):\n    # Remove retweet that started with \"RT\" and followed by \"@\"\n    tweet = re.sub(r'RT @[\\w_]+', '', tweet)\n    # Remove HTML tags\n    tweet = re.sub(r'<.*?>', '', tweet)\n    # Remove URLs\n    tweet = re.sub(r'http\\S+', '', tweet)\n    # Remove www URLs\n    tweet = re.sub(r'www.\\S+', '', tweet)\n    # Remove username that started with \"@\"\n    tweet = re.sub(r'@[\\w_]+', '', tweet)\n    # Remove numbers, and other non-alphabetic characters\n    tweet = re.sub('[^A-Za-z]+', ' ', str(tweet))\n    # Remove non-ASCII characters\n    tweet = re.sub(r'[^\\x00-\\x7f]',r'', tweet)\n    # Remove punctuation\n    tweet = tweet.translate(str.maketrans(\"\",\"\",string.punctuation))\n    # Remove leading and trailing whitespaces\n    tweet = tweet.strip()\n    # Lowecase the words\n    tweet = tweet.lower()\n\n    return tweet","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:04.859254Z","iopub.execute_input":"2024-05-21T04:48:04.859736Z","iopub.status.idle":"2024-05-21T04:48:04.872861Z","shell.execute_reply.started":"2024-05-21T04:48:04.859700Z","shell.execute_reply":"2024-05-21T04:48:04.871431Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"news_df_filter['headline_text_clean'] = news_df_filter['headline_text'].apply(lambda x: remove_special_characters(x))\nnews_df_filter['headline_text_clean'] = news_df_filter['headline_text_clean'].apply(lambda x: clean_text(x))\n\nprint(news_df_filter['headline_text'][:5])\nprint(news_df_filter['headline_text_clean'][:5])","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:13.230342Z","iopub.execute_input":"2024-05-21T04:48:13.230770Z","iopub.status.idle":"2024-05-21T04:48:13.314879Z","shell.execute_reply.started":"2024-05-21T04:48:13.230739Z","shell.execute_reply":"2024-05-21T04:48:13.313720Z"},"trusted":true},"execution_count":54,"outputs":[{"name":"stdout","text":"0    Big Bash League: Where; when and how to watch ...\n1         High-quality heroin worth Rs 15 crore seized\n2    Bones with blood stains found dumped near dust...\n3    In maths; Vijayawada students a notch above th...\n4          Governments must encourage scale-up of ICTS\nName: headline_text, dtype: object\n0    big bash league where when and how to watch li...\n1            high quality heroin worth rs crore seized\n2    bones with blood stains found dumped near dust...\n3    in maths vijayawada students a notch above the...\n4          governments must encourage scale up of icts\nName: headline_text_clean, dtype: object\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **News df: EDA**","metadata":{}},{"cell_type":"code","source":"# check the length of news_headline after cleaning\nnews_df_filter['len_headline_text_clean'] = news_df_filter['headline_text_clean'].apply(len)\n\n# distribution of content length\nsns.kdeplot(data= news_df_filter, x='len_headline_text_clean')","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:18.018193Z","iopub.execute_input":"2024-05-21T04:48:18.018695Z","iopub.status.idle":"2024-05-21T04:48:18.380675Z","shell.execute_reply.started":"2024-05-21T04:48:18.018657Z","shell.execute_reply":"2024-05-21T04:48:18.379356Z"},"trusted":true},"execution_count":55,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='len_headline_text_clean', ylabel='Density'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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Yh02bBiOHz+Ofv36dep4uVx+zbyj9pxz3759WLp0KX744QcsWLAATz75JNasWXPd817P0KFDkZqain/+8583bGuKrw+RNePEciIb1b9/fzzwwAOYOXMmNm/ejNzcXBw8eBBLlizB9u3bzSaGsLAwpKSkYN++fThx4gQee+wxlJaWGs7h4uKCOXPm4IUXXsCvv/6Ko0eP4uGHH4ZUatofbwsWLMC+ffvw5JNPIisrC2fOnMH333/fronlgK6e0+7du1FUVISKiop2nbOmpgYPPfQQnn76aUyZMgVr167Fhg0bsGnTpuue93oWLlyIQ4cO4YknnkBOTg5OnjyJTz/9tNVjTfH1IbJmTKKIbNiqVaswc+ZMPPfccxgwYACSkpJw6NChTg9PdUUMr7zyCoYNG4bExERMmDAB/v7+11RBf/fddzF27FjccccdSEhIwJgxYxATE2PSOIcOHYrff/8dp0+fxtixYxEdHY1FixYhMDCwXce//vrryMvLQ9++feHj49Ouc86fPx/Ozs546623AAARERF466238Nhjj6GoqKjN815P//798fPPPyM7OxsjR45EXFwcvv/+e9jZtT4wYYqvD5G1kggdmdxARERERADYE0VERETUKUyiiKjTXFxc2nz98ccfYofXbf7444/rvhfdacqUKW3GoR8WJCLT4HAeEXXa2bNn29wXFBTUocfpLVldXZ1hjlJrOvtEX2cUFRWhrq6u1X2enp7w9PTstliIrB2TKCIiIqJO4HAeERERUScwiSIiIiLqBCZRRERERJ3AJIqIiIioE5hEEREREXUCkygiIiKiTmASRURERNQJTKKIiIiIOuH/AykKv+xEWjIPAAAAAElFTkSuQmCC"},"metadata":{}}]},{"cell_type":"code","source":"# word cloud of processed news headline\n\nprocessed_s1 = ' '.join(news_df_filter['headline_text_clean'].tolist())\nword_cloud_1 = WordCloud(max_words=100, random_state=100, background_color=\"white\").generate(processed_s1)\n\nplt.figure(figsize=(15, 10))\nplt.imshow(word_cloud_1, interpolation='bilinear')\nplt.title('WordCloud of Processed News Headline [stage 1]', fontsize=20)\nplt.axis(\"off\")\n#plt.savefig('wordcloud_v1.png')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T05:39:37.173883Z","iopub.execute_input":"2024-05-20T05:39:37.174870Z","iopub.status.idle":"2024-05-20T05:39:38.160375Z","shell.execute_reply.started":"2024-05-20T05:39:37.174831Z","shell.execute_reply":"2024-05-20T05:39:38.159256Z"},"trusted":true},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# **News df: Labeling Headline News Sentiment with VADER**","metadata":{}},{"cell_type":"code","source":"# add polarity and subjectivity using TextBlob\nfrom textblob import TextBlob\n\n# function to calculate polarity\ndef polarity_calc(text):\n    try:\n        return TextBlob(text).sentiment.polarity\n    except:\n        return None\n    \n# function to calculate subjectivity\ndef subjectivity_calc(text):\n    try:\n        return TextBlob(text).sentiment.subjectivity\n    except:\n        return None","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:32.038679Z","iopub.execute_input":"2024-05-21T04:48:32.039109Z","iopub.status.idle":"2024-05-21T04:48:32.048065Z","shell.execute_reply.started":"2024-05-21T04:48:32.039077Z","shell.execute_reply":"2024-05-21T04:48:32.046484Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"news_df_filter['polarity'] = news_df_filter['headline_text_clean'].apply(lambda text: polarity_calc(text))\nnews_df_filter['subjectivity'] = news_df_filter['headline_text_clean'].apply(lambda text: subjectivity_calc(text))","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:43.058798Z","iopub.execute_input":"2024-05-21T04:48:43.060073Z","iopub.status.idle":"2024-05-21T04:48:44.025818Z","shell.execute_reply.started":"2024-05-21T04:48:43.060024Z","shell.execute_reply":"2024-05-21T04:48:44.024388Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"from nltk.sentiment.vader import SentimentIntensityAnalyzer\n\nanalyzer = SentimentIntensityAnalyzer()\n\n# calculating polarity score\nnews_df_filter['scores'] = news_df_filter['headline_text_clean'].apply(lambda text: analyzer.polarity_scores(text)) # took approximately ?\nnews_df_filter.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:47.609100Z","iopub.execute_input":"2024-05-21T04:48:47.609548Z","iopub.status.idle":"2024-05-21T04:48:48.062757Z","shell.execute_reply.started":"2024-05-21T04:48:47.609501Z","shell.execute_reply":"2024-05-21T04:48:48.061279Z"},"trusted":true},"execution_count":58,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/nltk/twitter/__init__.py:20: UserWarning: The twython library has not been installed. Some functionality from the twitter package will not be available.\n  warnings.warn(\"The twython library has not been installed. \"\n","output_type":"stream"},{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"  publish_date    headline_category  \\\n0   2018-01-02  sports.cricket.news   \n1   2018-01-03           city.delhi   \n2   2018-01-04        city.vadodara   \n3   2018-01-05      city.vijayawada   \n4   2018-01-06       city.bengaluru   \n\n                                       headline_text  len_headline_text  \\\n0  Big Bash League: Where; when and how to watch ...                 87   \n1       High-quality heroin worth Rs 15 crore seized                 44   \n2  Bones with blood stains found dumped near dust...                 58   \n3  In maths; Vijayawada students a notch above th...                 52   \n4        Governments must encourage scale-up of ICTS                 43   \n\n                                 headline_text_clean  len_headline_text_clean  \\\n0  big bash league where when and how to watch li...                       85   \n1          high quality heroin worth rs crore seized                       41   \n2  bones with blood stains found dumped near dust...                       58   \n3  in maths vijayawada students a notch above the...                       51   \n4        governments must encourage scale up of icts                       43   \n\n   polarity  subjectivity                                             scores  \n0  0.045455      0.233333  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  \n1  0.230000      0.320000  {'neg': 0.317, 'neu': 0.495, 'pos': 0.188, 'co...  \n2  0.100000      0.400000  {'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'comp...  \n3  0.000000      0.100000  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  \n4  0.000000      0.000000  {'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'comp...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>publish_date</th>\n      <th>headline_category</th>\n      <th>headline_text</th>\n      <th>len_headline_text</th>\n      <th>headline_text_clean</th>\n      <th>len_headline_text_clean</th>\n      <th>polarity</th>\n      <th>subjectivity</th>\n      <th>scores</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2018-01-02</td>\n      <td>sports.cricket.news</td>\n      <td>Big Bash League: Where; when and how to watch ...</td>\n      <td>87</td>\n      <td>big bash league where when and how to watch li...</td>\n      <td>85</td>\n      <td>0.045455</td>\n      <td>0.233333</td>\n      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2018-01-03</td>\n      <td>city.delhi</td>\n      <td>High-quality heroin worth Rs 15 crore seized</td>\n      <td>44</td>\n      <td>high quality heroin worth rs crore seized</td>\n      <td>41</td>\n      <td>0.230000</td>\n      <td>0.320000</td>\n      <td>{'neg': 0.317, 'neu': 0.495, 'pos': 0.188, 'co...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2018-01-04</td>\n      <td>city.vadodara</td>\n      <td>Bones with blood stains found dumped near dust...</td>\n      <td>58</td>\n      <td>bones with blood stains found dumped near dust...</td>\n      <td>58</td>\n      <td>0.100000</td>\n      <td>0.400000</td>\n      <td>{'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'comp...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2018-01-05</td>\n      <td>city.vijayawada</td>\n      <td>In maths; Vijayawada students a notch above th...</td>\n      <td>52</td>\n      <td>in maths vijayawada students a notch above the...</td>\n      <td>51</td>\n      <td>0.000000</td>\n      <td>0.100000</td>\n      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2018-01-06</td>\n      <td>city.bengaluru</td>\n      <td>Governments must encourage scale-up of ICTS</td>\n      <td>43</td>\n      <td>governments must encourage scale up of icts</td>\n      <td>43</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>{'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'comp...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# call out compound in separated column\nnews_df_filter['compound']  = news_df_filter['scores'].apply(lambda score_dict: score_dict['compound'])\n\n# call out negative, neutral, and positive\nnews_df_filter['negative'] = [analyzer.polarity_scores(text)['neg'] for text in news_df_filter['headline_text_clean']]\nnews_df_filter['neutral'] = [analyzer.polarity_scores(text)['neu'] for text in news_df_filter['headline_text_clean']]\nnews_df_filter['positive'] = [analyzer.polarity_scores(text)['pos'] for text in news_df_filter['headline_text_clean']]\n\n# set threshold\n# positive: compound score>=0.05\n# neutral: compound score between -0.05 and 0.05\n# negative: compound score<=-0.05\n\nnews_df_filter['sentiment'] = news_df_filter['compound'].apply(lambda c: 'Positive' if c >=0.05 else ('Neutral' if -0.05 <= c <= 0.05 else 'Negative'))\nnews_df_filter.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:48:58.105312Z","iopub.execute_input":"2024-05-21T04:48:58.105801Z","iopub.status.idle":"2024-05-21T04:48:59.359780Z","shell.execute_reply.started":"2024-05-21T04:48:58.105766Z","shell.execute_reply":"2024-05-21T04:48:59.358644Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"  publish_date    headline_category  \\\n0   2018-01-02  sports.cricket.news   \n1   2018-01-03           city.delhi   \n2   2018-01-04        city.vadodara   \n3   2018-01-05      city.vijayawada   \n4   2018-01-06       city.bengaluru   \n\n                                       headline_text  len_headline_text  \\\n0  Big Bash League: Where; when and how to watch ...                 87   \n1       High-quality heroin worth Rs 15 crore seized                 44   \n2  Bones with blood stains found dumped near dust...                 58   \n3  In maths; Vijayawada students a notch above th...                 52   \n4        Governments must encourage scale-up of ICTS                 43   \n\n                                 headline_text_clean  len_headline_text_clean  \\\n0  big bash league where when and how to watch li...                       85   \n1          high quality heroin worth rs crore seized                       41   \n2  bones with blood stains found dumped near dust...                       58   \n3  in maths vijayawada students a notch above the...                       51   \n4        governments must encourage scale up of icts                       43   \n\n   polarity  subjectivity                                             scores  \\\n0  0.045455      0.233333  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...   \n1  0.230000      0.320000  {'neg': 0.317, 'neu': 0.495, 'pos': 0.188, 'co...   \n2  0.100000      0.400000  {'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'comp...   \n3  0.000000      0.100000  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...   \n4  0.000000      0.000000  {'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'comp...   \n\n   compound  negative  neutral  positive sentiment  \n0    0.0000     0.000    1.000     0.000   Neutral  \n1   -0.3182     0.317    0.495     0.188  Negative  \n2   -0.4019     0.231    0.769     0.000  Negative  \n3    0.0000     0.000    1.000     0.000   Neutral  \n4    0.5106     0.000    0.645     0.355  Positive  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>publish_date</th>\n      <th>headline_category</th>\n      <th>headline_text</th>\n      <th>len_headline_text</th>\n      <th>headline_text_clean</th>\n      <th>len_headline_text_clean</th>\n      <th>polarity</th>\n      <th>subjectivity</th>\n      <th>scores</th>\n      <th>compound</th>\n      <th>negative</th>\n      <th>neutral</th>\n      <th>positive</th>\n      <th>sentiment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2018-01-02</td>\n      <td>sports.cricket.news</td>\n      <td>Big Bash League: Where; when and how to watch ...</td>\n      <td>87</td>\n      <td>big bash league where when and how to watch li...</td>\n      <td>85</td>\n      <td>0.045455</td>\n      <td>0.233333</td>\n      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n      <td>0.0000</td>\n      <td>0.000</td>\n      <td>1.000</td>\n      <td>0.000</td>\n      <td>Neutral</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2018-01-03</td>\n      <td>city.delhi</td>\n      <td>High-quality heroin worth Rs 15 crore seized</td>\n      <td>44</td>\n      <td>high quality heroin worth rs crore seized</td>\n      <td>41</td>\n      <td>0.230000</td>\n      <td>0.320000</td>\n      <td>{'neg': 0.317, 'neu': 0.495, 'pos': 0.188, 'co...</td>\n      <td>-0.3182</td>\n      <td>0.317</td>\n      <td>0.495</td>\n      <td>0.188</td>\n      <td>Negative</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2018-01-04</td>\n      <td>city.vadodara</td>\n      <td>Bones with blood stains found dumped near dust...</td>\n      <td>58</td>\n      <td>bones with blood stains found dumped near dust...</td>\n      <td>58</td>\n      <td>0.100000</td>\n      <td>0.400000</td>\n      <td>{'neg': 0.231, 'neu': 0.769, 'pos': 0.0, 'comp...</td>\n      <td>-0.4019</td>\n      <td>0.231</td>\n      <td>0.769</td>\n      <td>0.000</td>\n      <td>Negative</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2018-01-05</td>\n      <td>city.vijayawada</td>\n      <td>In maths; Vijayawada students a notch above th...</td>\n      <td>52</td>\n      <td>in maths vijayawada students a notch above the...</td>\n      <td>51</td>\n      <td>0.000000</td>\n      <td>0.100000</td>\n      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n      <td>0.0000</td>\n      <td>0.000</td>\n      <td>1.000</td>\n      <td>0.000</td>\n      <td>Neutral</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2018-01-06</td>\n      <td>city.bengaluru</td>\n      <td>Governments must encourage scale-up of ICTS</td>\n      <td>43</td>\n      <td>governments must encourage scale up of icts</td>\n      <td>43</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>{'neg': 0.0, 'neu': 0.645, 'pos': 0.355, 'comp...</td>\n      <td>0.5106</td>\n      <td>0.000</td>\n      <td>0.645</td>\n      <td>0.355</td>\n      <td>Positive</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# corr matrix\nnews_check = news_df_filter[['compound', 'negative', 'neutral', 'positive']]\n\ncorr = news_check.corr()\nplt.figure(figsize=(8,5))\n#masking the upper triangle part (since matrix is repetitive)\nmask = np.triu(np.ones_like(corr, dtype=bool))\nsns.heatmap(corr, mask=mask, cmap=\"Blues\", annot=True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:53:01.803059Z","iopub.execute_input":"2024-05-21T04:53:01.803985Z","iopub.status.idle":"2024-05-21T04:53:02.135218Z","shell.execute_reply.started":"2024-05-21T04:53:01.803946Z","shell.execute_reply":"2024-05-21T04:53:02.133879Z"},"trusted":true},"execution_count":61,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"numm = news_df_filter[['polarity', 'subjectivity']]\n\n# Create a figure and axes for each column\nfig, axes = plt.subplots(1, len(numm.columns), figsize=(15, 5))\n\n# Iterate over columns and plot histogram for each\nfor i, category in enumerate(numm.columns):\n    sns.histplot(numm[category], ax=axes[i], kde=False)  # Use histplot with kde=False for a simple histogram\n    axes[i].set_title(category)\n\n# Adjust layout\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T05:43:46.202369Z","iopub.execute_input":"2024-05-20T05:43:46.202798Z","iopub.status.idle":"2024-05-20T05:43:46.964663Z","shell.execute_reply.started":"2024-05-20T05:43:46.202766Z","shell.execute_reply":"2024-05-20T05:43:46.963173Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x500 with 2 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAABdEAAAHqCAYAAADrpwd3AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABi30lEQVR4nO3deViVdf7/8dcBZFE5ICpboZiZW6alRmiLKSMuNTrZQpJLmTYFlTpTo5MrVpY5SjqUX5ty+YUtNuXXzJgMM0sRjdRc0Kw0nBSIEHBlvX9/9PP8OsqdgHDOAZ6P6zrX5bk/n3Pf7/tG4H1e3Pd9LIZhGAIAAAAAAAAAABdxc3YBAAAAAAAAAAC4KkJ0AAAAAAAAAABMEKIDAAAAAAAAAGCCEB0AAAAAAAAAABOE6AAAAAAAAAAAmCBEBwAAAAAAAADABCE6AAAAAAAAAAAmCNEBAAAAAAAAADBBiA4AAAAAAAAAgAlCdABAlfTr10/9+vWr1XUeOXJEFotFy5cvr9X1AgAAAK5o06ZNslgseu+99y45d+zYsQoPD6/7oi5wOT26s2oGgLpGiA4AcCnr16/XrFmznF0GAAAA0KCtWrVKiYmJdbqNM2fOaNasWdq0aVOdbgcA6pqHswsAADRebdu21dmzZ9WkSRPbsvXr1yspKYkgHQAAAI3aa6+9poqKijpb/6pVq7R3715NnDjRbnllPXpVXVjzmTNnNHv2bEmq9ataAcCRCNEBAA5XVlamiooKeXp6ytvb29nlAAAAAC6nJiF2bbBYLDXu0Z1VMwDUNW7nAgAN1KxZs2SxWHTgwAHde++9slqtatmypZ588kmdO3fONq+srExz5sxR+/bt5eXlpfDwcP39739XcXHx766/pKREM2bMUM+ePeXn56dmzZrplltu0WeffWY37/w9FefPn6/ExETbdvbv33/R/RbHjh2rpKQkSb827+cfhmEoPDxcw4YNu6iOc+fOyc/PT4888shlHjEAAACgcidPntTEiRMVHh4uLy8vBQYG6g9/+IO+/vprSVJ4eLjGjh170evMPleovLxcf//73xUcHKxmzZrpj3/8o44ePWo3p7L7i1dUVCgxMVFdu3aVt7e3goKC9Mgjj+jEiRMXbePjjz/WbbfdJl9fX1mtVvXu3VurVq2y1fXRRx/pxx9/tPXc57d1YY8+f/58WSwW/fjjjxdtY+rUqfL09LRt/7c1HzlyRK1bt5YkzZ4927adWbNmadmyZbJYLNq5c+dF63z++efl7u6un3766aIxAHAWzkQHgAbu3nvvVXh4uObOnatt27Zp0aJFOnHihFauXClJevjhh7VixQrdfffd+stf/qL09HTNnTtXmZmZ+uCDD0zXW1RUpH/961+6//77NX78eJ08eVKvv/66oqOjtX37dvXo0cNu/rJly3Tu3DlNmDBBXl5eCggIuOjy1EceeUTHjh3Thg0b9H/+z/+xLbdYLHrggQc0b9485efnKyAgwDb24YcfqqioSA888EAtHC0AAADgYn/+85/13nvvKT4+Xl26dNEvv/yiL7/8UpmZmbrhhhuqvb7nnntOFotFf/vb35Sbm6vExERFRUVp165d8vHxMX3dI488ouXLl+vBBx/UE088ocOHD+uf//yndu7cqS1bttjOBF++fLkeeughde3aVVOnTpW/v7927typlJQUjRw5Us8884wKCwv13//+VwsXLpQkNW/evNJt3nvvvXr66af17rvv6qmnnrIbe/fddzVw4EC1aNHiote1bt1ar776qh599FH96U9/0l133SVJuu6669SuXTvFxcUpOTlZ119/vd3rkpOT1a9fP11xxRVVP6AAUNcMAECDNHPmTEOS8cc//tFu+WOPPWZIMnbv3m3s2rXLkGQ8/PDDdnP++te/GpKMjRs32pbddtttxm233WZ7XlZWZhQXF9u97sSJE0ZQUJDx0EMP2ZYdPnzYkGRYrVYjNzfXbv75sWXLltmWxcXFGZX9ejp48KAhyXj11Vftlv/xj380wsPDjYqKit8/IAAAAEAN+fn5GXFxcabjbdu2NcaMGXPR8gt76M8++8yQZFxxxRVGUVGRbfm7775rSDJefvll27IxY8YYbdu2tT3/4osvDElGcnKy3TZSUlLslhcUFBi+vr5GRESEcfbsWbu5v+2Zhw4darf+8yrr0SMjI42ePXvazdu+fbshyVi5cqVpzT///LMhyZg5c+ZF27n//vuN0NBQo7y83Lbs66+/vmjbAOAKuJ0LADRwcXFxds8ff/xxSb9+gOf69eslSZMnT7ab85e//EWS9NFHH5mu193dXZ6enpJ+vaw0Pz9fZWVl6tWrl+2y1t8aMWKE7XLOmrjmmmsUERGh5ORk27L8/Hx9/PHHio2NlcViqfG6AQAAgN/j7++v9PR0HTt2rFbWN3r0aPn6+tqe33333QoJCbH155VZvXq1/Pz89Ic//EF5eXm2R8+ePdW8eXPbbRU3bNigkydPasqUKRfd27ymPfN9992njIwMff/997Zl77zzjry8vCq95WJVjB49WseOHbO7HWRycrJ8fHw0YsSIGq0TAOoKIToANHAdOnSwe96+fXu5ubnpyJEj+vHHH+Xm5qarr77abk5wcLD8/f0rve/hb61YsULXXXedvL291bJlS7Vu3VofffSRCgsLL5rbrl27y96X0aNHa8uWLba6Vq9erdLSUo0aNeqy1w0AAACYmTdvnvbu3auwsDDdeOONmjVrln744Ycar+/CHt1isejqq6/WkSNHTF9z6NAhFRYWKjAwUK1bt7Z7nDp1Srm5uZJkC7qvvfbaGtd3oXvuuUdubm565513JEmGYWj16tUaPHiwrFZrjdb5hz/8QSEhIbaTZCoqKvTWW29p2LBhdn9gAABXQIgOAI1MZWef1OSMlDfffFNjx45V+/bt9frrryslJUUbNmxQ//79L7rXuaTfvbdjVcXExKhJkya2RvvNN99Ur1691LFjx8teNwAAAGDm3nvv1Q8//KDFixcrNDRUL730krp27aqPP/5Yknk/XV5eXms1VFRUKDAwUBs2bKj0kZCQUGvbulBoaKhuueUWvfvuu5Kkbdu2KSsrS/fdd1+N1+nu7q6RI0fq3//+t86dO6fPPvtMx44d47OOALgkQnQAaOAOHTpk9/y7775TRUWFwsPD1bZtW1VUVFw0JycnRwUFBWrbtq3pet977z1dddVVev/99zVq1ChFR0crKipK586du6x6fy/QDwgI0NChQ5WcnKwff/xRW7Zs4Sx0AAAAOERISIgee+wxrVmzRocPH1bLli313HPPSZJatGihgoKCi15jdmXnhf23YRj67rvvFB4ebrr99u3b65dfflHfvn0VFRV10aN79+62eZK0d+/e392f6p5Ic99992n37t06ePCg3nnnHTVt2lR33nnnZW1j9OjRKioq0ocffqjk5GS1bt1a0dHR1aoLAByBEB0AGrikpCS754sXL5YkDR48WEOGDJEkJSYm2s1ZsGCBJGno0KGm63V3d5f0a8N/Xnp6utLS0i6r3mbNmklSpW9CJGnUqFHav3+/nnrqKbm7uysmJuaytgcAAAD8nvLy8otuVxgYGKjQ0FAVFxdL+jW43rZtm0pKSmxz1q1bp6NHj1a6zpUrV+rkyZO25++9956OHz+uwYMHm9Zx7733qry8XHPmzLlorKyszNY/Dxw4UL6+vpo7d+5FJ7j8tndv1qxZpbdhNDNixAi5u7vrrbfe0urVq3XHHXfYenczTZs2lWTe21933XW67rrr9K9//Uv//ve/FRMTIw8PjyrXBACOwk8mAGjgDh8+rD/+8Y8aNGiQ0tLS9Oabb2rkyJG2M1XGjBmjpUuXqqCgQLfddpu2b9+uFStWaPjw4br99ttN13vHHXfo/fff15/+9CcNHTpUhw8f1pIlS9SlSxedOnWqxvX27NlTkvTEE08oOjr6oqB86NChatmype0ejIGBgTXeFgAAAHApJ0+e1JVXXqm7775b3bt3V/PmzfXpp59qx44d+sc//iFJevjhh/Xee+9p0KBBuvfee/X999/rzTfftJ0VfqGAgADdfPPNevDBB5WTk6PExERdffXVGj9+vGkdt912mx555BHNnTtXu3bt0sCBA9WkSRMdOnRIq1ev1ssvv6y7775bVqtVCxcu1MMPP6zevXtr5MiRatGihXbv3q0zZ85oxYoVkn7tu9955x1NnjxZvXv3VvPmzX/3zPLAwEDdfvvtWrBggU6ePFmlW7n4+PioS5cueuedd3TNNdcoICBA1157rd392kePHq2//vWvksStXAC4LgMA0CDNnDnTkGTs37/fuPvuuw1fX1+jRYsWRnx8vHH27FnbvNLSUmP27NlGu3btjCZNmhhhYWHG1KlTjXPnztmt77bbbjNuu+022/OKigrj+eefN9q2bWt4eXkZ119/vbFu3TpjzJgxRtu2bW3zDh8+bEgyXnrppYtqPD+2bNky27KysjLj8ccfN1q3bm1YLBajsl9Vjz32mCHJWLVqVc0PEAAAAFAFxcXFxlNPPWV0797d8PX1NZo1a2Z0797deOWVV+zm/eMf/zCuuOIKw8vLy+jbt6/x1VdfXdRDf/bZZ4Yk46233jKmTp1qBAYGGj4+PsbQoUONH3/80W59F/bV5y1dutTo2bOn4ePjY/j6+hrdunUznn76aePYsWN289auXWv06dPH8PHxMaxWq3HjjTcab731lm381KlTxsiRIw1/f39Dkm1blfXo57322muGJMPX19fuPcXv1bx161ajZ8+ehqen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4QoNDdXBgwftln/77bdq27Ztne5XXanL4zVlyhR988032rVrl+0hSQsXLtSyZcscsXu1qi6PlfTrGegDBw6Up6en1q5d2yDPuvH09FTPnj2VmppqW1ZRUaHU1FRFRkZW+prIyEi7+ZK0YcMG0/kNRU2OlSTNmzdPc+bMUUpKit19+Ruy6h6rTp06ac+ePXY/m/74xz/q9ttv165duxQWFubI8h2uJv+3+vbtq++++872hlf69XdfSEhIg35DVJNjdebMmYveRJx/M2kYRt0VWw811p/voB9oDOhjGjZ6r4aPfrFho8fFhVyyz3LaR5qiUoMGDTKuv/56Iz093fjyyy+NDh06GPfff79t/L///a/RsWNHIz093bZs4cKFhtVqNVavXm0cOnTImDZtmuHt7W189913ztgFh6rJ8bqQqvCpwA1BdY9VYWGhERERYXTr1s347rvvjOPHj9seZWVlztqNOvH2228bXl5exvLly439+/cbEyZMMPz9/Y3s7GzDMAxj1KhRxpQpU2zzt2zZYnh4eBjz5883MjMzjZkzZxpNmjQx9uzZ46xdcJjqHqsXXnjB8PT0NN577z27/0MnT5501i44THWP1YXGjBljDBs2zEHVOl91j1dWVpbh6+trxMfHGwcPHjTWrVtnBAYGGs8++6yzdsFhqnusZs6cafj6+hpvvfWW8cMPPxiffPKJ0b59e+Pee+911i44zMmTJ42dO3caO3fuNCQZCxYsMHbu3Gn8+OOPhmEYxpQpU4xRo0bZ5v/www9G06ZNjaeeesrIzMw0kpKSDHd3dyMlJcVZuwAHoh9o+OhjGjZ6r4aPfrFho8dt2BpCX06I7mJ++eUX4/777zeaN29uWK1W48EHH7Rr0g4fPmxIMj777DO7182dO9e48sorjaZNmxqRkZHGF1984eDKnaOmx+u3GkuIXt1j9dlnnxmSKn0cPnzYOTtRhxYvXmy0adPG8PT0NG688UZj27ZttrHbbrvNGDNmjN38d99917jmmmsMT09Po2vXrsZHH33k4IqdpzrHqm3btpX+H5o5c6bjC3eC6v6/+q3G+Eauusdr69atRkREhOHl5WVcddVVxnPPPdfg/shnpjrHqrS01Jg1a5bRvn17w9vb2wgLCzMee+wx48SJE44v3MHMfpedPz5jxowxbrvttote06NHD8PT09O46qqrjGXL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"},"metadata":{}}]},{"cell_type":"code","source":"# Calculate class percentages\nclass_percentages = news_df_filter['sentiment'].value_counts(normalize=True) * 100\n\n# Plotting\nplt.figure(figsize=(8, 8))\nplt.pie(class_percentages, labels=class_percentages.index, autopct='%1.1f%%', startangle=90, colors=['maroon', 'limegreen', 'royalblue'])\nplt.title('Sentiment Distribution')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T05:44:02.222973Z","iopub.execute_input":"2024-05-20T05:44:02.223571Z","iopub.status.idle":"2024-05-20T05:44:02.381420Z","shell.execute_reply.started":"2024-05-20T05:44:02.223513Z","shell.execute_reply":"2024-05-20T05:44:02.379459Z"},"trusted":true},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x800 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Define polarity categories\ncategories = ['Negative', 'Positive', 'Neutral']\n\n# Create a figure and axes for each category\nfig, axes = plt.subplots(1, len(categories), figsize=(15, 5))\n\n# Iterate over categories and plot histogram for each\nfor i, category in enumerate(categories):\n    sns.histplot(news_df_filter['compound'][news_df_filter['sentiment'] == category], kde=False, color=\"orange\", ax=axes[i])\n    axes[i].set_title(category)\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T05:44:08.473261Z","iopub.execute_input":"2024-05-20T05:44:08.473743Z","iopub.status.idle":"2024-05-20T05:44:09.419427Z","shell.execute_reply.started":"2024-05-20T05:44:08.473710Z","shell.execute_reply":"2024-05-20T05:44:09.417875Z"},"trusted":true},"execution_count":30,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x500 with 3 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Calculate statistics\nmean_polarity = np.mean(news_df_filter['compound'])\nstd_polarity = np.std(news_df_filter['compound'])\n\n# Define threshold\nneg_threshold = -0.05\npos_threshold = mean_polarity + std_polarity\n\n# Define the range for neutral\nneutral_min = neg_threshold\nneutral_max = pos_threshold\n\n# Visualize the distribution of polarity score\nsns.histplot(news_df_filter['compound'], kde=True, color=\"tomato\")\nplt.axvline(neutral_min, color='black', linestyle='--', label='Neutral range')\nplt.axvline(neutral_max, color='black', linestyle='--')\nplt.axvline(neg_threshold, color='red', linestyle='--', label='Negative threshold')\nplt.axvline(pos_threshold, color='green', linestyle='--', label='Positive threshold')\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T04:05:26.038447Z","iopub.execute_input":"2024-05-20T04:05:26.038989Z","iopub.status.idle":"2024-05-20T04:05:31.998646Z","shell.execute_reply.started":"2024-05-20T04:05:26.038956Z","shell.execute_reply":"2024-05-20T04:05:31.997635Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# word cloud in each sentiment\n\n# Group the DataFrame by category\ngrouped = news_df_filter.groupby('sentiment')\n\n# Iterate over each category and generate word cloud\nfor category, group in grouped:\n\n    # Concatenate all texts in the category into a single string\n    all_headline = ' '.join(text for text in group['headline_text_clean'])\n\n    # Generate word cloud for the category\n    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(all_headline)\n\n    # Display the generated word cloud for the category\n    plt.figure(figsize=(10, 5))\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.title(category + ' Words')\n    plt.axis('off')\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T05:44:13.380223Z","iopub.execute_input":"2024-05-20T05:44:13.380634Z","iopub.status.idle":"2024-05-20T05:44:17.146638Z","shell.execute_reply.started":"2024-05-20T05:44:13.380604Z","shell.execute_reply":"2024-05-20T05:44:17.145060Z"},"trusted":true},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# **Merge dataset before modeling**","metadata":{}},{"cell_type":"code","source":"news_df_predictor = news_df_filter[['polarity', 'subjectivity', 'compound', 'positive', 'negative', 'neutral']]\n\n# slice the dataset, so that the len(X) is the same with len(y)\nX = news_df_predictor[-1357:]\ny = stock_df_filter['Adj Close']\n\n# the scale between predictor and target is different (decimal vs hundreds)\ny_log = np.log(stock_df_filter['Adj Close'])\n\n# split data for training and testing\nfrom sklearn.model_selection import train_test_split\n\n# split train set into train and validation set 75:25\nX_train_hocv, X_val_hocv, y_train_hocv, y_val_hocv = train_test_split(X, y, test_size=0.25, random_state=42)\nprint(X_train_hocv.shape, X_val_hocv.shape, y_train_hocv.shape, y_val_hocv.shape)\n\n# predictor scale in decimal, target scale in hundreds\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state = 0)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)\n\n# predictor scale in decimal, target scale in decimal\nX_train, X_test, y_train_log, y_test_log = train_test_split(X, y_log, test_size=0.2, random_state = 0)\nprint(X_train.shape, X_test.shape, y_train_log.shape, y_test_log.shape)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:22:23.911093Z","iopub.execute_input":"2024-05-21T05:22:23.911615Z","iopub.status.idle":"2024-05-21T05:22:23.932553Z","shell.execute_reply.started":"2024-05-21T05:22:23.911562Z","shell.execute_reply":"2024-05-21T05:22:23.931237Z"},"trusted":true},"execution_count":76,"outputs":[{"name":"stdout","text":"(1017, 6) (340, 6) (1017,) (340,)\n(1085, 6) (272, 6) (1085,) (272,)\n(1085, 6) (272, 6) (1085,) (272,)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Modeling**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score, KFold, GridSearchCV, cross_val_predict, RandomizedSearchCV\n\nfrom sklearn.pipeline import make_pipeline\nfrom mlxtend.regressor import StackingCVRegressor\n\nfrom sklearn.metrics import mean_squared_error, make_scorer\nfrom catboost import CatBoostRegressor, Pool\nfrom sklearn.base import clone\nfrom scipy.stats import randint\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nimport lightgbm as lgb\n\nfrom time import time\nimport pprint\nfrom skopt.space import Real, Integer\nfrom skopt.utils import use_named_args\nfrom skopt import BayesSearchCV","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:57:24.838969Z","iopub.execute_input":"2024-05-21T04:57:24.839376Z","iopub.status.idle":"2024-05-21T04:57:26.515051Z","shell.execute_reply.started":"2024-05-21T04:57:24.839347Z","shell.execute_reply":"2024-05-21T04:57:26.513837Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"def rmse(y_true, y_pred):\n    return mean_squared_error(y_true, y_pred, squared=False)\n\n# make RMSE scorer\nrmse_scorer = make_scorer(rmse, greater_is_better=False)\n\n# create a k-fold cross-validation object\nkf = KFold(n_splits=5, shuffle=True, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T04:57:35.405811Z","iopub.execute_input":"2024-05-21T04:57:35.406274Z","iopub.status.idle":"2024-05-21T04:57:35.413207Z","shell.execute_reply.started":"2024-05-21T04:57:35.406223Z","shell.execute_reply":"2024-05-21T04:57:35.411850Z"},"trusted":true},"execution_count":66,"outputs":[]},{"cell_type":"code","source":"def train_regression_models(X, y, cv=5):\n    \"\"\"\n    Train various regression models and evaluate them using RMSE with cross-validation.\n\n    Parameters:\n    - X: Input features\n    - y: Target variable\n    - cv: Number of cross-validation folds (default is 5)\n\n    Returns:\n    - A dictionary containing trained models and their corresponding RMSE scores\n    \"\"\"\n    models = {\n\n        'LGBM': lgb.LGBMRegressor(objective='regression'),\n        'Extra Tree': ExtraTreesRegressor(n_estimators=100, random_state=42),\n        'Random Forest': RandomForestRegressor(n_estimators=100, random_state=42),\n        'Gradient Boosting': GradientBoostingRegressor(learning_rate=0.1, n_estimators=100, max_depth=3, random_state=42),\n        'KNeighbors': KNeighborsRegressor(),\n        'Decision Tree': DecisionTreeRegressor(),\n        'XGB': XGBRegressor(objective='reg:squarederror'),\n        'Cat Boost': CatBoostRegressor(iterations=100, random_state=42, verbose=0),\n        'Linear Regression': LinearRegression()\n\n    }\n\n    rmse_scores = {}\n\n    for model_name, model in models.items():\n        # Use negative root mean squared error as the scoring metric for cross-validation\n        neg_mse_scorer = make_scorer(rmse, greater_is_better=False)\n        cv_scores = cross_val_score(model, X, y, cv=kf, scoring=neg_mse_scorer)\n\n        # Calculate RMSE scores and store them in the dictionary\n        rmse_scores[model_name] = -cv_scores\n\n        print(f\"{model_name} RMSE: {np.mean(rmse_scores[model_name]):.4f} (std: {np.std(rmse_scores[model_name]):.4f})\")\n\n    return rmse_scores","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:02:20.464153Z","iopub.execute_input":"2024-05-21T05:02:20.464613Z","iopub.status.idle":"2024-05-21T05:02:20.475720Z","shell.execute_reply.started":"2024-05-21T05:02:20.464565Z","shell.execute_reply":"2024-05-21T05:02:20.474584Z"},"trusted":true},"execution_count":73,"outputs":[]},{"cell_type":"code","source":"train_regression_models(X, y, cv=5)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:04:25.011192Z","iopub.execute_input":"2024-05-21T05:04:25.011673Z","iopub.status.idle":"2024-05-21T05:04:30.994916Z","shell.execute_reply.started":"2024-05-21T05:04:25.011637Z","shell.execute_reply":"2024-05-21T05:04:30.993497Z"},"trusted":true},"execution_count":74,"outputs":[{"name":"stdout","text":"[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001712 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 419\n[LightGBM] [Info] Number of data points in the train set: 1085, number of used features: 6\n[LightGBM] [Info] Start training from score 108.904715\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000139 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 432\n[LightGBM] [Info] Number of data points in the train set: 1085, number of used features: 6\n[LightGBM] [Info] Start training from score 108.629527\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000142 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 437\n[LightGBM] [Info] Number of data points in the train set: 1086, number of used features: 6\n[LightGBM] [Info] Start training from score 109.413198\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000130 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 421\n[LightGBM] [Info] Number of data points in the train set: 1086, number of used features: 6\n[LightGBM] [Info] Start training from score 108.825028\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000143 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 433\n[LightGBM] [Info] Number of data points in the train set: 1086, number of used features: 6\n[LightGBM] [Info] Start training from score 108.535800\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\nLGBM RMSE: 24.2174 (std: 0.3526)\nExtra Tree RMSE: 24.4418 (std: 0.2534)\nRandom Forest RMSE: 23.9594 (std: 0.2565)\nGradient Boosting RMSE: 23.6425 (std: 0.2741)\nKNeighbors RMSE: 31.6611 (std: 0.5431)\nDecision Tree RMSE: 28.3030 (std: 0.8739)\nXGB RMSE: 25.2187 (std: 0.2184)\nCat Boost RMSE: 23.8762 (std: 0.4318)\nLinear Regression RMSE: 24.1302 (std: 0.3238)\n","output_type":"stream"},{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"{'LGBM': array([23.97477339, 23.87898412, 24.44430488, 24.80316297, 23.98585803]),\n 'Extra Tree': array([24.74449939, 24.13600511, 24.48852487, 24.67775447, 24.162408  ]),\n 'Random Forest': array([23.92448568, 23.67063511, 23.81729578, 23.95164296, 24.43285341]),\n 'Gradient Boosting': array([23.91308668, 23.38087297, 23.57992811, 24.00754507, 23.33122505]),\n 'KNeighbors': array([31.28649629, 31.18601874, 31.18386562, 32.34298319, 32.30599062]),\n 'Decision Tree': array([28.99353059, 27.00945632, 27.97706188, 28.0156461 , 29.51950265]),\n 'XGB': array([25.540323  , 24.87411665, 25.17722727, 25.17202197, 25.32985014]),\n 'Cat Boost': array([24.39442469, 23.24689126, 23.63224674, 24.32292973, 23.78432386]),\n 'Linear Regression': array([24.50052696, 24.3958067 , 23.5896402 , 23.98302879, 24.18175983])}"},"metadata":{}}]},{"cell_type":"code","source":"# tuning GB model\n\n# A wrapper for measuring time and performances of different optimizers\ndef report_perf(optimizer, X, y, title, callbacks=None):\n    start = time()\n    if callbacks:\n        optimizer.fit(X, y, callback=callbacks)\n    else:\n        optimizer.fit(X, y)\n    best_score = optimizer.best_score_\n    best_score_std = optimizer.cv_results_['std_test_score'][optimizer.best_index_]\n    best_params = optimizer.best_params_\n    print((title + \" took %.2f seconds,  candidates checked: %d, best CV score: %.3f \"\n           +u\"\\u00B1\"+\" %.3f\") % (time() - start,\n                                  len(optimizer.cv_results_['params']),\n                                  best_score,\n                                  best_score_std))\n    print('Best parameters:')\n    pprint.pprint(best_params)\n    print()\n    return best_params\n\n# Setting the search space for GradientBoostingRegressor\nsearch_spaces = {\n    'learning_rate': (0.01, 0.2),\n    'max_depth': (3, 10),\n    'min_samples_split': (2, 20),\n    'min_samples_leaf': (1, 20),\n    'subsample': (0.5, 1.0),\n    'max_features': ['auto', 'sqrt', 'log2', None]\n}\n\n# Create a GradientBoostingRegressor\ngb_regressor = GradientBoostingRegressor(random_state=42)\n\n# Create BayesSearchCV object\nopt = BayesSearchCV(\n    gb_regressor,\n    search_spaces,\n    scoring=rmse_scorer,\n    cv=kf,\n    n_jobs=1,\n    n_iter=20,\n    return_train_score=False,\n    refit=True,\n    verbose=100\n)\n\n# Report the best parameters\nbest_params_gb = report_perf(opt, X, y, 'Gradient Boosting Regressor')\n","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:15:23.245705Z","iopub.execute_input":"2024-05-21T05:15:23.246155Z","iopub.status.idle":"2024-05-21T05:16:10.361211Z","shell.execute_reply.started":"2024-05-21T05:15:23.246125Z","shell.execute_reply":"2024-05-21T05:16:10.360350Z"},"trusted":true},"execution_count":75,"outputs":[{"name":"stdout","text":"Fitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622\n[CV 1/5; 1/1] END learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622;, score=-23.712 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622\n[CV 2/5; 1/1] END learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622;, score=-24.119 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622\n[CV 3/5; 1/1] END learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622;, score=-23.997 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622\n[CV 4/5; 1/1] END learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622;, score=-24.193 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622\n[CV 5/5; 1/1] END learning_rate=0.18014497064957152, max_depth=5, max_features=sqrt, min_samples_leaf=20, min_samples_split=13, subsample=0.5088444092523622;, score=-23.807 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543\n[CV 1/5; 1/1] END learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543;, score=-24.546 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543\n[CV 2/5; 1/1] END learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543;, score=-24.507 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543\n[CV 3/5; 1/1] END learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543;, score=-24.470 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543\n[CV 4/5; 1/1] END learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543;, score=-24.545 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543\n[CV 5/5; 1/1] END learning_rate=0.19190852975251932, max_depth=5, max_features=log2, min_samples_leaf=8, min_samples_split=7, subsample=0.717287039766543;, score=-24.372 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 1/5; 1/1] END learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007;, score=-23.885 total time=   0.2s\n[CV 2/5; 1/1] START learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 2/5; 1/1] END learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007;, score=-23.235 total time=   0.2s\n[CV 3/5; 1/1] START learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 3/5; 1/1] END learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007;, score=-23.400 total time=   0.2s\n[CV 4/5; 1/1] START learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 4/5; 1/1] END learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007;, score=-23.813 total time=   0.2s\n[CV 5/5; 1/1] START learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 5/5; 1/1] END learning_rate=0.03379331799577525, max_depth=7, max_features=auto, min_samples_leaf=3, min_samples_split=13, subsample=0.8822012720153007;, score=-23.697 total time=   0.2s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455\n[CV 1/5; 1/1] END learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455;, score=-23.720 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455\n[CV 2/5; 1/1] END learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455;, score=-23.425 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455\n[CV 3/5; 1/1] END learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455;, score=-23.450 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455\n[CV 4/5; 1/1] END learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455;, score=-23.870 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455\n[CV 5/5; 1/1] END learning_rate=0.04136193782134703, max_depth=7, max_features=log2, min_samples_leaf=14, min_samples_split=5, subsample=0.7872228745246455;, score=-23.664 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135\n[CV 1/5; 1/1] END learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135;, score=-23.860 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135\n[CV 2/5; 1/1] END learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135;, score=-23.510 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135\n[CV 3/5; 1/1] END learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135;, score=-23.002 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135\n[CV 4/5; 1/1] END learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135;, score=-23.552 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135\n[CV 5/5; 1/1] END learning_rate=0.031695568869544354, max_depth=3, max_features=sqrt, min_samples_leaf=3, min_samples_split=2, subsample=0.6177995675520135;, score=-23.730 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126\n[CV 1/5; 1/1] END learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126;, score=-24.898 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126\n[CV 2/5; 1/1] END learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126;, score=-24.383 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126\n[CV 3/5; 1/1] END learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126;, score=-24.561 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126\n[CV 4/5; 1/1] END learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126;, score=-24.873 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126\n[CV 5/5; 1/1] END learning_rate=0.15254100860238934, max_depth=6, max_features=log2, min_samples_leaf=5, min_samples_split=4, subsample=0.9479650461257126;, score=-24.315 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586\n[CV 1/5; 1/1] END learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586;, score=-23.956 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586\n[CV 2/5; 1/1] END learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586;, score=-23.746 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586\n[CV 3/5; 1/1] END learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586;, score=-23.220 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586\n[CV 4/5; 1/1] END learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586;, score=-23.305 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586\n[CV 5/5; 1/1] END learning_rate=0.026423102339298524, max_depth=4, max_features=sqrt, min_samples_leaf=20, min_samples_split=11, subsample=0.6897617881839586;, score=-23.689 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128\n[CV 1/5; 1/1] END learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128;, score=-23.790 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128\n[CV 2/5; 1/1] END learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128;, score=-23.780 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128\n[CV 3/5; 1/1] END learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128;, score=-23.622 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128\n[CV 4/5; 1/1] END learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128;, score=-24.116 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128\n[CV 5/5; 1/1] END learning_rate=0.11428060105114722, max_depth=4, max_features=sqrt, min_samples_leaf=17, min_samples_split=17, subsample=0.5852960661807128;, score=-23.883 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 1/5; 1/1] END learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182;, score=-23.739 total time=   0.2s\n[CV 2/5; 1/1] START learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182\n[CV 2/5; 1/1] END learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182;, score=-23.429 total time=   0.2s\n[CV 3/5; 1/1] START learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 3/5; 1/1] END learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182;, score=-23.841 total time=   0.2s\n[CV 4/5; 1/1] START learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182\n[CV 4/5; 1/1] END learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182;, score=-24.076 total time=   0.2s\n[CV 5/5; 1/1] START learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 5/5; 1/1] END learning_rate=0.07316185601182809, max_depth=5, max_features=auto, min_samples_leaf=18, min_samples_split=6, subsample=0.729806687037182;, score=-23.901 total time=   0.2s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648\n[CV 1/5; 1/1] END learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648;, score=-24.320 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648\n[CV 2/5; 1/1] END learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648;, score=-23.530 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648\n[CV 3/5; 1/1] END learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648;, score=-24.079 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648\n[CV 4/5; 1/1] END learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648;, score=-24.210 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648\n[CV 5/5; 1/1] END learning_rate=0.12482932099857005, max_depth=5, max_features=sqrt, min_samples_leaf=6, min_samples_split=14, subsample=0.8334710932968648;, score=-24.001 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737\n[CV 1/5; 1/1] END learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737;, score=-23.913 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737\n[CV 2/5; 1/1] END learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737;, score=-23.499 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737\n[CV 3/5; 1/1] END learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737;, score=-23.024 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737\n[CV 4/5; 1/1] END learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737;, score=-23.568 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737\n[CV 5/5; 1/1] END learning_rate=0.03627824232016959, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5000062379188737;, score=-23.727 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314\n[CV 1/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314;, score=-24.323 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314\n[CV 2/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314;, score=-23.775 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314\n[CV 3/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314;, score=-23.381 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314\n[CV 4/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314;, score=-23.625 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314\n[CV 5/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.5201259949774314;, score=-23.904 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894\n[CV 1/5; 1/1] END learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894;, score=-23.959 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894\n[CV 2/5; 1/1] END learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894;, score=-23.616 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894\n[CV 3/5; 1/1] END learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894;, score=-23.070 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894\n[CV 4/5; 1/1] END learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894;, score=-23.651 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894\n[CV 5/5; 1/1] END learning_rate=0.03563874751971616, max_depth=3, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, subsample=0.6721580825777894;, score=-23.607 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 1/5; 1/1] END learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.848 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 2/5; 1/1] END learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.572 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 3/5; 1/1] END learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.234 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 4/5; 1/1] END learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.296 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 5/5; 1/1] END learning_rate=0.05416033402541074, max_depth=7, max_features=sqrt, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.608 total time=   0.1s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555\n[CV 1/5; 1/1] END learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555;, score=-25.339 total time=   0.2s\n[CV 2/5; 1/1] START learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555\n[CV 2/5; 1/1] END learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555;, score=-24.351 total time=   0.2s\n[CV 3/5; 1/1] START learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555\n[CV 3/5; 1/1] END learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555;, score=-24.861 total time=   0.2s\n[CV 4/5; 1/1] START learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555\n[CV 4/5; 1/1] END learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555;, score=-25.196 total time=   0.2s\n[CV 5/5; 1/1] START learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555\n[CV 5/5; 1/1] END learning_rate=0.11351050015882172, max_depth=7, max_features=None, min_samples_leaf=2, min_samples_split=5, subsample=0.705574463340555;, score=-24.993 total time=   0.2s\nFitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 1/5; 1/1] END learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.844 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 2/5; 1/1] END learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.790 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 3/5; 1/1] END learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.387 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 4/5; 1/1] END learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.209 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 5/5; 1/1] END learning_rate=0.053355485878278784, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.742 total time=   0.1s\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Fitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0\n[CV 1/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0;, score=-24.291 total time=   0.2s\n[CV 2/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 2/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0;, score=-23.908 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0\n[CV 3/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0;, score=-23.209 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 4/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0;, score=-23.154 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0\n[CV 5/5; 1/1] END learning_rate=0.01, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=1.0;, score=-23.930 total time=   0.1s\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Fitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 1/5; 1/1] END learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.868 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 2/5; 1/1] END learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.791 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 3/5; 1/1] END learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.327 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 4/5; 1/1] END learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.198 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 5/5; 1/1] END learning_rate=0.051744746678446675, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.712 total time=   0.1s\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Fitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 1/5; 1/1] END learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.871 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 2/5; 1/1] END learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.794 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 3/5; 1/1] END learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.356 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"[CV 4/5; 1/1] END learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.190 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5\n[CV 5/5; 1/1] END learning_rate=0.05097280396072325, max_depth=3, max_features=auto, min_samples_leaf=20, min_samples_split=20, subsample=0.5;, score=-23.732 total time=   0.1s\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/tree/_classes.py:277: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0'`.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Fitting 5 folds for each of 1 candidates, totalling 5 fits\n[CV 1/5; 1/1] START learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5\n[CV 1/5; 1/1] END learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5;, score=-23.778 total time=   0.1s\n[CV 2/5; 1/1] START learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5\n[CV 2/5; 1/1] END learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5;, score=-23.578 total time=   0.1s\n[CV 3/5; 1/1] START learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5\n[CV 3/5; 1/1] END learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5;, score=-23.200 total time=   0.1s\n[CV 4/5; 1/1] START learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5\n[CV 4/5; 1/1] END learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5;, score=-23.580 total time=   0.1s\n[CV 5/5; 1/1] START learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5\n[CV 5/5; 1/1] END learning_rate=0.03794102643067693, max_depth=4, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, subsample=0.5;, score=-23.611 total time=   0.1s\nGradient Boosting Regressor took 47.09 seconds,  candidates checked: 20, best CV score: -23.512 ± 0.223\nBest parameters:\nOrderedDict([('learning_rate', 0.05416033402541074),\n             ('max_depth', 7),\n             ('max_features', 'sqrt'),\n             ('min_samples_leaf', 20),\n             ('min_samples_split', 20),\n             ('subsample', 0.5)])\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# training with best parameter from gradient boosting tuning\n\ngbr_best_params = {\n    'learning_rate': 0.05416033402541074,\n    'max_depth': 7,\n    'max_features': 'sqrt',\n    'min_samples_leaf': 20,\n    'min_samples_split': 20,\n    'subsample': 0.5\n}\n\ngbr_tuning = GradientBoostingRegressor(**gbr_best_params)\ncross_val_scores = cross_val_score(gbr_tuning, X, y, cv=kf, scoring=rmse_scorer)\n\n# Print the cross-validation scores\nprint(\"Cross-validation scores (RMSE):\", cross_val_scores)\nprint(\"Avg CV RMSE:\", np.mean(cross_val_scores))\n\n# Fit the catboost tuning on the training set\ngbr_tuning = gbr_tuning.fit(X_train_hocv, y_train_hocv)\n\n# Make predictions on the val set\ny_pred = gbr_tuning.predict(X_val_hocv)\n\n# Calculate RMSE on the val set\nval_rmse = np.sqrt(mean_squared_error(y_val_hocv, y_pred))\n\nprint(f\"Val RMSE: {val_rmse}\")","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:23:25.714556Z","iopub.execute_input":"2024-05-21T05:23:25.715662Z","iopub.status.idle":"2024-05-21T05:23:26.430923Z","shell.execute_reply.started":"2024-05-21T05:23:25.715616Z","shell.execute_reply":"2024-05-21T05:23:26.429484Z"},"trusted":true},"execution_count":79,"outputs":[{"name":"stdout","text":"Cross-validation scores (RMSE): [-23.68012227 -23.6491544  -23.59765071 -23.2627525  -23.65303222]\nAvg CV RMSE: -23.568542421424393\nVal RMSE: 23.463406181277296\n","output_type":"stream"}]},{"cell_type":"code","source":"# prediction vs actual\n\ndate_stock = stock_df_filter.iloc[:, 0]\ntrue_value = y_test\nmy_pred = gbr_tuning.predict(X_test)\nresiduals = true_value - my_pred\n\nsubmission = pd.DataFrame(list(zip(date_stock, true_value, my_pred, residuals)),\n                          columns=['Date', 'Actual', 'Prediction', 'Residuals'])\n\nprint(submission.shape)\nsubmission.head(20)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:29:15.922891Z","iopub.execute_input":"2024-05-21T05:29:15.923326Z","iopub.status.idle":"2024-05-21T05:29:15.955295Z","shell.execute_reply.started":"2024-05-21T05:29:15.923290Z","shell.execute_reply":"2024-05-21T05:29:15.953993Z"},"trusted":true},"execution_count":87,"outputs":[{"name":"stdout","text":"(272, 4)\n","output_type":"stream"},{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"         Date      Actual  Prediction  Residuals\n0  2018-01-02  142.343994  110.230878  32.113116\n1  2018-01-03   87.656700   98.131656 -10.474956\n2  2018-01-04  140.357895  126.970423  13.387472\n3  2018-01-05  134.488602  112.905612  21.582990\n4  2018-01-08  145.799698  110.524926  35.274772\n5  2018-01-09  139.800400  110.524926  29.275474\n6  2018-01-10  124.769600  101.972976  22.796624\n7  2018-01-11   88.155899  107.547963 -19.392064\n8  2018-01-12   94.290703  100.724098  -6.433395\n9  2018-01-15   65.981903  107.084892 -41.102989\n10 2018-01-16  111.592300  100.429868  11.162432\n11 2018-01-17  125.221802  126.970423  -1.748621\n12 2018-01-18  144.932297  112.215728  32.716569\n13 2018-01-19  137.206100  110.524926  26.681174\n14 2018-01-22  144.828705  102.303089  42.525616\n15 2018-01-23  118.000504  109.744715   8.255789\n16 2018-01-24   73.103104   96.159432 -23.056328\n17 2018-01-25   90.481201  110.524926 -20.043725\n18 2018-01-29  107.424202  110.524926  -3.100724\n19 2018-01-30  142.442200  110.524926  31.917274","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Actual</th>\n      <th>Prediction</th>\n      <th>Residuals</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2018-01-02</td>\n      <td>142.343994</td>\n      <td>110.230878</td>\n      <td>32.113116</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2018-01-03</td>\n      <td>87.656700</td>\n      <td>98.131656</td>\n      <td>-10.474956</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2018-01-04</td>\n      <td>140.357895</td>\n      <td>126.970423</td>\n      <td>13.387472</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2018-01-05</td>\n      <td>134.488602</td>\n      <td>112.905612</td>\n      <td>21.582990</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2018-01-08</td>\n      <td>145.799698</td>\n      <td>110.524926</td>\n      <td>35.274772</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2018-01-09</td>\n      <td>139.800400</td>\n      <td>110.524926</td>\n      <td>29.275474</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2018-01-10</td>\n      <td>124.769600</td>\n      <td>101.972976</td>\n      <td>22.796624</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2018-01-11</td>\n      <td>88.155899</td>\n      <td>107.547963</td>\n      <td>-19.392064</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2018-01-12</td>\n      <td>94.290703</td>\n      <td>100.724098</td>\n      <td>-6.433395</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2018-01-15</td>\n      <td>65.981903</td>\n      <td>107.084892</td>\n      <td>-41.102989</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2018-01-16</td>\n      <td>111.592300</td>\n      <td>100.429868</td>\n      <td>11.162432</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2018-01-17</td>\n      <td>125.221802</td>\n      <td>126.970423</td>\n      <td>-1.748621</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2018-01-18</td>\n      <td>144.932297</td>\n      <td>112.215728</td>\n      <td>32.716569</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2018-01-19</td>\n      <td>137.206100</td>\n      <td>110.524926</td>\n      <td>26.681174</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2018-01-22</td>\n      <td>144.828705</td>\n      <td>102.303089</td>\n      <td>42.525616</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>2018-01-23</td>\n      <td>118.000504</td>\n      <td>109.744715</td>\n      <td>8.255789</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>2018-01-24</td>\n      <td>73.103104</td>\n      <td>96.159432</td>\n      <td>-23.056328</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>2018-01-25</td>\n      <td>90.481201</td>\n      <td>110.524926</td>\n      <td>-20.043725</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>2018-01-29</td>\n      <td>107.424202</td>\n      <td>110.524926</td>\n      <td>-3.100724</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>2018-01-30</td>\n      <td>142.442200</td>\n      <td>110.524926</td>\n      <td>31.917274</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"plt.scatter(y_test, residuals)\nplt.xlabel('Predicted Adj Close')\nplt.ylabel('Residuals')\nplt.title('Predicted Adj Close Residual Plot')\nplt.axhline(y=0, color='r', linestyle='--')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:30:23.895184Z","iopub.execute_input":"2024-05-21T05:30:23.895567Z","iopub.status.idle":"2024-05-21T05:30:24.184327Z","shell.execute_reply.started":"2024-05-21T05:30:23.895539Z","shell.execute_reply":"2024-05-21T05:30:24.182581Z"},"trusted":true},"execution_count":88,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"> ### the prediction result is bad, as the residual value quite large. but using GBR Tuning is better than using auto ARIMA (by now)","metadata":{}}]}